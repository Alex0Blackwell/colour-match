{"ast":null,"code":"var _jsxFileName = \"/home/alex/documents/programming/website/react/sfu-voting/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\n\nfunction Tile(props) {\n  let res = \" \";\n  if (props.votes > 0) res = props.votes;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4 col-md-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: props.key,\n    className: \"tile\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass Votes extends React.Component {\n  constructor(props) {\n    let colours = randomiseColours();\n    super(props);\n    this.state = {\n      oneFlipped: false,\n      tileVotes: colours\n    };\n  }\n\n  handleClick(i) {\n    let totalPresses = this.state.tileVotes;\n    totalPresses[i]++;\n    this.setState({\n      // oneFlipped: !oneFlipped,\n      tileVotes: totalPresses\n    });\n  }\n\n  randomiseColours() {\n    let allColours = ['#b99cff', '#ed9cff', '#ff9ca9', '#ffca9c', '#f8ff9c', '#9cffb0', '#9cfff3', '#9cc4ff', '#9c9cff'];\n    let res = []; // first populate array\n\n    let i, c;\n    i = c = 0;\n\n    while (i < allColours.length * 2) {\n      if (i % 2 != 0) c++;\n      res.push(allColours[c]);\n      i++;\n    }\n\n    console.log(res); // then randomise it\n\n    for (let i = 0; i < res.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random() * res.length);\n      let _tmp = res[randI];\n      res[randI] = res[i];\n      res[i] = _tmp;\n    }\n\n    console.log(res);\n    return res;\n  }\n\n  renderTiles() {\n    let res = [];\n\n    for (let i = 0; i < 18; ++i) {\n      res.push( /*#__PURE__*/React.createElement(Tile, {\n        key: i.toString(),\n        onClick: () => this.handleClick(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }\n      }));\n    }\n\n    return res;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \" \", this.props.title, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.renderTiles()));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Votes, {\n    title: \"Match the Colours!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/documents/programming/website/react/sfu-voting/src/App.js"],"names":["React","Button","Tile","props","res","votes","key","onClick","Votes","Component","constructor","colours","randomiseColours","state","oneFlipped","tileVotes","handleClick","i","totalPresses","setState","allColours","c","length","push","console","log","randI","Math","floor","random","_tmp","renderTiles","toString","render","title","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAIC,GAAG,GAAG,GAAV;AACA,MAAGD,KAAK,CAACE,KAAN,GAAc,CAAjB,EACED,GAAG,GAAGD,KAAK,CAACE,KAAZ;AACF,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEF,KAAK,CAACG,GAAhB;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,OAAO,EAAEH,KAAK,CAACI,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,MAAMC,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,QAAIQ,OAAO,GAAGC,gBAAgB,EAA9B;AACA,UAAMT,KAAN;AACA,SAAKU,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,SAAS,EAAEJ;AAFA,KAAb;AAID;;AAEDK,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,QAAIC,YAAY,GAAG,KAAKL,KAAL,CAAWE,SAA9B;AACAG,IAAAA,YAAY,CAACD,CAAD,CAAZ;AACA,SAAKE,QAAL,CAAc;AACZ;AACAJ,MAAAA,SAAS,EAAEG;AAFC,KAAd;AAID;;AAEDN,EAAAA,gBAAgB,GAAG;AACjB,QAAIQ,UAAU,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EACjB,SADiB,EACP,SADO,EACG,SADH,EACc,SADd,CAAjB;AAEA,QAAIhB,GAAG,GAAG,EAAV,CAHiB,CAKjB;;AACA,QAAIa,CAAJ,EAAOI,CAAP;AACAJ,IAAAA,CAAC,GAAGI,CAAC,GAAG,CAAR;;AACA,WAAMJ,CAAC,GAAGG,UAAU,CAACE,MAAX,GAAkB,CAA5B,EAA+B;AAC7B,UAAGL,CAAC,GAAG,CAAJ,IAAS,CAAZ,EACEI,CAAC;AACHjB,MAAAA,GAAG,CAACmB,IAAJ,CAASH,UAAU,CAACC,CAAD,CAAnB;AACAJ,MAAAA,CAAC;AACF;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ,EAdiB,CAgBjB;;AACA,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,GAAG,CAACkB,MAAvB,EAA+BL,CAAC,EAAhC,EAAoC;AAClC;AACA,UAAIS,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAczB,GAAG,CAACkB,MAA7B,CAAZ;AACA,UAAIQ,IAAI,GAAG1B,GAAG,CAACsB,KAAD,CAAd;AACAtB,MAAAA,GAAG,CAACsB,KAAD,CAAH,GAAatB,GAAG,CAACa,CAAD,CAAhB;AACAb,MAAAA,GAAG,CAACa,CAAD,CAAH,GAASa,IAAT;AACD;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACA,WAAOA,GAAP;AACD;;AAED2B,EAAAA,WAAW,GAAG;AACZ,QAAI3B,GAAG,GAAG,EAAV;;AAEA,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1Bb,MAAAA,GAAG,CAACmB,IAAJ,eAAS,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEN,CAAC,CAACe,QAAF,EAAX;AAAyB,QAAA,OAAO,EAAE,MAAM,KAAKhB,WAAL,CAAiBC,CAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACD;;AAED,WAAQb,GAAR;AACD;;AAED6B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAK9B,KAAL,CAAW+B,KAAjB,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKH,WAAL,EAFF,CAFF,CADF;AAWD;;AArEiC;;AA0EpC,SAASI,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACA,IAAA,KAAK,EAAE,oBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AASD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\n\n\nfunction Tile(props) {\n  let res = \" \"\n  if(props.votes > 0)\n    res = props.votes;\n  return(\n    <div className=\"col-lg-4 col-md-4 col-6\">\n      <div key={props.key} className=\"tile\" onClick={props.onClick}>\n      </div>\n    </div>\n  );\n}\n\nclass Votes extends React.Component {\n  constructor(props) {\n    let colours = randomiseColours();\n    super(props);\n    this.state = {\n      oneFlipped: false,\n      tileVotes: colours,\n    }\n  }\n\n  handleClick(i) {\n    let totalPresses = this.state.tileVotes;\n    totalPresses[i]++;\n    this.setState({\n      // oneFlipped: !oneFlipped,\n      tileVotes: totalPresses,\n    });\n  }\n\n  randomiseColours() {\n    let allColours = ['#b99cff','#ed9cff','#ff9ca9','#ffca9c','#f8ff9c',\n    '#9cffb0','#9cfff3','#9cc4ff', '#9c9cff'];\n    let res = [];\n\n    // first populate array\n    let i, c;\n    i = c = 0;\n    while(i < allColours.length*2) {\n      if(i % 2 != 0)\n        c++;\n      res.push(allColours[c]);\n      i++\n    }\n    console.log(res);\n\n    // then randomise it\n    for(let i = 0; i < res.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random()*res.length);\n      let _tmp = res[randI];\n      res[randI] = res[i];\n      res[i] = _tmp;\n    }\n    console.log(res);\n    return res;\n  }\n\n  renderTiles() {\n    let res = [];\n\n    for(let i = 0; i < 18; ++i) {\n      res.push(<Tile key={i.toString()} onClick={() => this.handleClick(i)}/>);\n    }\n\n    return (res);\n  }\n\n  render() {\n    return(\n      <div className=\"container\">\n        <h1> {this.props.title} </h1>\n        <div className=\"row\">\n        {\n          this.renderTiles()\n        }\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Votes\n        title={\"Match the Colours!\"}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}