{"ast":null,"code":"var _jsxFileName = \"/home/alex/documents/programming/website/react/colour-match/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction Tile(props) {\n  if (props.action === 1) console.log(\"Ohh baby we really got something here\");\n  let click, classname;\n  classname = \"tile\";\n\n  if (props.colour !== \"#3b3b3b\") {\n    click = props.onClick;\n    classname += \" pointer\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 col-md-2 col-sm-2 col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classname,\n    onClick: click,\n    style: {\n      backgroundColor: props.colour\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass Votes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0)\n    };\n  }\n\n  handleClick(colour, index) {\n    this.state.numFlipped++;\n\n    if (this.state.numFlipped === 2) {\n      if (this.state.colourToMatch === colour && this.state.indexOfLast !== index) {\n        console.log(\"Nice, that's a match\");\n        let newScore = this.state.roundScore++;\n        this.setState({\n          roundScore: newScore\n        });\n        this.updateColours([index, this.state.indexOfLast], 2);\n        this.renderTiles();\n      } else {\n        console.log(\"Not epic, not a match\");\n      }\n\n      let newTileAction = this.state.tileAction;\n      newTileAction[this.state.indexOfLast] = 0;\n      newTileAction[index] = 0;\n      this.setState({\n        numFlipped: 0,\n        colourToMatch: null,\n        indexOfLast: null,\n        tileAction: newTileAction\n      });\n    } else if (this.state.numFlipped === 1) {\n      console.log(\"waiting for next...\");\n      let newTileAction = this.state.tileAction;\n      newTileAction[index] = 1; // console.log(tindex, newTileAction);\n\n      this.setState({\n        colourToMatch: colour,\n        indexOfLast: index,\n        tileAction: newTileAction\n      });\n    }\n  }\n\n  updateColours(indexChangeArr, action) {\n    // where action is 0 for normal, 1 for raised, and 2 for dead\n    let newColours = this.state.colours;\n\n    for (let i = 0; i < indexChangeArr.length; i++) {\n      if (action === 2) {\n        // if dead\n        newColours[indexChangeArr[i]] = \"#3b3b3b\";\n      } else if (action === 1) {// if raised\n      }\n    }\n\n    this.setState({\n      colours: newColours\n    });\n  }\n\n  randomiseColours() {\n    let allColours = ['#b99cff', '#ed9cff', '#ff9ca9', '#ffca9c', '#f8ff9c', '#9cffb0', '#9cfff3', '#9cc4ff', '#9c9cff'];\n    let doubles = []; // first populate array\n\n    let i = 0;\n\n    while (i < allColours.length) {\n      doubles.push(allColours[i]);\n      doubles.push(allColours[i]);\n      i++;\n    } // then randomise it\n\n\n    for (let i = 0; i < doubles.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random() * doubles.length);\n      let _tmp = doubles[randI];\n      doubles[randI] = doubles[i];\n      doubles[i] = _tmp;\n    }\n\n    return doubles;\n  }\n\n  renderTiles() {\n    let res = [];\n    let actionArr = this.state.tileAction; // console.log(actionArr);\n\n    const colours = this.state.colours;\n    const listItems = colours.map((colour, index) => res.push( /*#__PURE__*/React.createElement(Tile, {\n      key: index.toString(),\n      onClick: () => this.handleClick(colour, index),\n      colour: colour,\n      action: actionArr[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 16\n      }\n    })));\n    return res;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \" \", this.props.title, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, this.renderTiles()));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Votes, {\n    title: \"Match the Colours!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/documents/programming/website/react/colour-match/src/App.js"],"names":["React","Tile","props","action","console","log","click","classname","colour","onClick","backgroundColor","Votes","Component","constructor","state","roundScore","numFlipped","colourToMatch","indexOfLast","colours","randomiseColours","tileAction","Array","fill","handleClick","index","newScore","setState","updateColours","renderTiles","newTileAction","indexChangeArr","newColours","i","length","allColours","doubles","push","randI","Math","floor","random","_tmp","res","actionArr","listItems","map","toString","render","title","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction Tile(props) {\n  if(props.action === 1)\n    console.log(\"Ohh baby we really got something here\");\n  let click, classname;\n  classname = \"tile\";\n  if(props.colour !== \"#3b3b3b\") {\n    click = props.onClick;\n    classname += \" pointer\";\n  }\n\n  return(\n    <div className=\"col-lg-2 col-md-2 col-sm-2 col-4\">\n      <div className={classname} onClick={click} style={{backgroundColor: props.colour}}>\n      </div>\n    </div>\n  );\n}\n\n\nclass Votes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0),\n    }\n  }\n\n  handleClick(colour, index) {\n    this.state.numFlipped++;\n    if(this.state.numFlipped === 2) {\n      if(this.state.colourToMatch === colour && this.state.indexOfLast !== index) {\n        console.log(\"Nice, that's a match\");\n        let newScore = this.state.roundScore++;\n        this.setState({\n          roundScore: newScore,\n        });\n        this.updateColours([index,this.state.indexOfLast], 2);\n        this.renderTiles()\n      } else {\n        console.log(\"Not epic, not a match\");\n      }\n      let newTileAction = this.state.tileAction;\n      newTileAction[this.state.indexOfLast] = 0;\n      newTileAction[index] = 0;\n      this.setState({\n        numFlipped: 0,\n        colourToMatch: null,\n        indexOfLast: null,\n        tileAction: newTileAction,\n      });\n    }\n    else if(this.state.numFlipped === 1) {\n      console.log(\"waiting for next...\")\n      let newTileAction = this.state.tileAction;\n      newTileAction[index] = 1;\n      // console.log(tindex, newTileAction);\n      this.setState({\n        colourToMatch: colour,\n        indexOfLast: index,\n        tileAction: newTileAction,\n      });\n    }\n\n  }\n\n  updateColours(indexChangeArr, action) {\n    // where action is 0 for normal, 1 for raised, and 2 for dead\n    let newColours = this.state.colours;\n\n    for(let i = 0; i < indexChangeArr.length; i++) {\n      if(action === 2) {\n        // if dead\n        newColours[indexChangeArr[i]] = \"#3b3b3b\";\n      }\n      else if(action === 1) {\n        // if raised\n      }\n    }\n\n    this.setState({\n      colours: newColours,\n    });\n  }\n\n  randomiseColours() {\n    let allColours = ['#b99cff','#ed9cff','#ff9ca9','#ffca9c','#f8ff9c',\n    '#9cffb0','#9cfff3','#9cc4ff', '#9c9cff'];\n    let doubles = [];\n\n    // first populate array\n    let i = 0;\n    while(i < allColours.length) {\n      doubles.push(allColours[i]);\n      doubles.push(allColours[i]);\n      i++;\n    }\n\n    // then randomise it\n    for(let i = 0; i < doubles.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random()*doubles.length);\n      let _tmp = doubles[randI];\n      doubles[randI] = doubles[i];\n      doubles[i] = _tmp;\n    }\n\n    return doubles;\n  }\n\n  renderTiles() {\n    let res = [];\n\n    let actionArr = this.state.tileAction;\n    // console.log(actionArr);\n    const colours = this.state.colours;\n\n    const listItems = colours.map((colour, index) =>\n      res.push(<Tile\n        key={index.toString()}\n        onClick={() => this.handleClick(colour, index)}\n        colour={colour}\n        action={actionArr[index]}\n        />),\n    );\n\n    return (res);\n  }\n\n\n  render() {\n    return(\n      <div className=\"container\">\n        <h1> {this.props.title} </h1>\n        <div className=\"row\">\n        {\n          this.renderTiles()\n        }\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Votes\n        title={\"Match the Colours!\"}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}